library("AER", lib.loc="~/R/win-library/3.1")
library(gtools)
library("bayesm", lib.loc="~/R/win-library/3.1")
library("BAS", lib.loc="~/R/win-library/3.1")
library("base64", lib.loc="~/R/win-library/3.1")
library("BMS", lib.loc="~/R/win-library/3.1")
library("ca", lib.loc="~/R/win-library/3.1")
library("brew", lib.loc="~/R/win-library/3.1")
library("COUNT", lib.loc="~/R/win-library/3.1")
library("e1071", lib.loc="~/R/win-library/3.1")
library("Ecdat", lib.loc="~/R/win-library/3.1")
library("effects", lib.loc="~/R/win-library/3.1")
library("FactoClass", lib.loc="~/R/win-library/3.1")
library("FactoMineR", lib.loc="~/R/win-library/3.1")
library("EVER", lib.loc="~/R/win-library/3.1")
library("evaluate", lib.loc="~/R/win-library/3.1")
library("ff", lib.loc="~/R/win-library/3.1")
library("ffbase", lib.loc="~/R/win-library/3.1")
library("Formula", lib.loc="~/R/win-library/3.1")
library("frontier", lib.loc="~/R/win-library/3.1")
library("gdata", lib.loc="~/R/win-library/3.1")
library("geepack", lib.loc="~/R/win-library/3.1")
library("GGally", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("glm2", lib.loc="~/R/win-library/3.1")
library("gmodels", lib.loc="~/R/win-library/3.1")
library("gmm", lib.loc="~/R/win-library/3.1")
library("glmmML", lib.loc="~/R/win-library/3.1")
library("gnm", lib.loc="~/R/win-library/3.1")
library("gstat", lib.loc="~/R/win-library/3.1")
library("gsl", lib.loc="~/R/win-library/3.1")
library("gtable", lib.loc="~/R/win-library/3.1")
estimate = function (a, d) { -log(d/2) / (2*a^2) }
sig = function (a, n) { pbinom(floor(n*0.5)-floor(n*a), size=floor(n), prob=0.5)}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(74,000) {sig(a,n)-d}, range=r, lower=min(r), upper=max(r))
v$where[[length(v$where)]] }
library(gtools)
estimate = function (a, d) { -log(d/2) / (2*a^2) }
sig = function (a, n) { pbinom(floor(n*0.5)-floor(74,000*a), size=floor(74,000), prob=0.5)}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(74,000) {sig(a,n)-d}, range=r, lower=min(r), upper=max(r))
v$where[[length(v$where)]]
}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(74,000) {sig(a,n)-d}, range=r, lower=min(r), upper=max(r))
v$where[[length(v$where)]]}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(74,000) {sig(a,n)-d}, range=r, lower=min(r), upper=max(r))
sig = function (a, 74000) { pbinom(floor(74000*0.5)-floor(74000*a), size=floor(74000), prob=0.5)}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(74000) {sig(a,74000)-d}, range=r, lower=min(r), upper=max(r))
v$where[[length(v$where)]]}
library(gtools)
estimate = function (a, d) { -log(d/2) / (2*a^2) }
sig = function (a, 74000) { pbinom(floor(74000*0.5)-floor(74000*a), size=floor(74000), prob=0.5)}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(74000) {sig(a,74000)-d}, range=r, lower=min(r), upper=max(r))
library(gtools)
estimate = function (a, d) { -log(d/2) / (2*a^2) }
sig = function (a, n) { pbinom(floor(n*0.5)-floor(n*a), size=floor(n), prob=0.5)}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(n) {sig(a,n)-d}, range=r, lower=min(r), upper=max(r))
v$where[[length(v$where)]]}
library("leaps", lib.loc="~/R/win-library/3.1")
library("LearnBayes", lib.loc="~/R/win-library/3.1")
library("lfe", lib.loc="~/R/win-library/3.1")
library("lme4", lib.loc="~/R/win-library/3.1")
library(gtools)
estimate = function (a, d) { -log(d/2) / (2*a^2) }
sig = function (a, n) { pbinom(floor(n*0.5)-floor(n*a), size=floor(n), prob=0.5)}
binomsize = function (a,d) {
r=c(1,2*estimate(a,d))
v=binsearch(function(n) {sig(a,n)-d}, range=r, lower=min(r), upper=max(r))
v$where[[length(v$where)]]}
source('~/GitHub/MEprogramSamplingMethodology/MEsamplingmethod/estimatetest1.R')
save.image("~/GitHub/MEprogramSamplingMethodology/MEsamplingmethod/estimatetest1.RData")
savehistory("~/GitHub/MEprogramSamplingMethodology/MEsamplingmethod/estimatetest1history.Rhistory")
help(gtools)
source('~/GitHub/MEprogramSamplingMethodology/MEsamplingmethod/estimatetest1.R')
savehistory("~/GitHub/MEprogramSamplingMethodology/MEsamplingmethod/estimatetest1history.Rhistory")
